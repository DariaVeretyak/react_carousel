{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transformX","this","props","images","itemWidth","frameSize","step","animationDuration","totalConteinerWidth","length","carouselWidth","width","itemSize","height","transform","stepWidth","className","style","map","image","i","src","alt","type","onClick","setState","prevState","disabled","React","Component","App","action","htmlFor","id","value","min","max","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a11ad1f4.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n};\n\ntype State = {\n  transformX: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    transformX: 0,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.props;\n\n    const { transformX } = this.state;\n\n    const totalConteinerWidth = itemWidth * images.length;\n\n    const carouselWidth = { width: `${itemWidth * frameSize}px` };\n\n    const itemSize = {\n      width: `${itemWidth}px`,\n      height: `${itemWidth}px`,\n    };\n\n    const transform = {\n      transform: `translateX(${transformX}px)`,\n      animationDuration: `${animationDuration}ms`,\n    };\n\n    const changeStyleNext = () => {\n      this.setState((prevState) => {\n        const transformNext = prevState.transformX - (itemWidth * step);\n\n        return {\n          transformX: transformNext,\n        };\n      });\n    };\n\n    const changeStylePrev = () => {\n      this.setState((prevState) => {\n        const transformNext = prevState.transformX + (itemWidth * step);\n\n        return {\n          transformX: transformNext,\n        };\n      });\n    };\n\n    const stepWidth = step * itemWidth;\n\n    return (\n      <div className=\"Carousel\" style={carouselWidth}>\n        <ul\n          className=\"Carousel__list\"\n        >\n          {images.map((image, i) => {\n            return (\n              <li\n                key={image}\n                className=\"carousel__item\"\n                style={transform}\n              >\n                <img\n                  src={image}\n                  alt={`${i + 1}`}\n                  style={itemSize}\n                />\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button Carousel__button--prev\"\n            type=\"button\"\n            onClick={changeStylePrev}\n            disabled={stepWidth + transformX > 0}\n          >\n            Prev\n          </button>\n          <button\n            className=\"Carousel__button Carousel__button--next\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={changeStyleNext}\n            disabled={stepWidth - transformX > totalConteinerWidth}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ntype State = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\" data-cy=\"title\">Carousel</h1>\n        <form action=\"\" className=\"App__form\">\n          <div className=\"App__input-conteiner\">\n            <label htmlFor=\"itemWidth\">Item size:</label>\n            <input\n              id=\"itemWidth\"\n              className=\"App__input\"\n              type=\"number\"\n              value={itemWidth}\n              min={60}\n              max={220}\n              step={10}\n              onChange={\n                (event) => {\n                  this.setState({ itemWidth: +event.target.value });\n                }\n              }\n            />\n          </div>\n\n          <div className=\"App__input-conteiner\">\n            <label htmlFor=\"frameSize\">Frame size:</label>\n            <input\n              id=\"frameSize\"\n              className=\"App__input\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={10}\n              onChange={\n                (event) => {\n                  this.setState({ frameSize: +event.target.value });\n                }\n              }\n            />\n          </div>\n\n          <div className=\"App__input-conteiner\">\n            <label htmlFor=\"step\">Step:</label>\n            <input\n              id=\"frameSize\"\n              className=\"App__input\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={10}\n              onChange={\n                (event) => {\n                  this.setState({ step: +event.target.value });\n                }\n              }\n            />\n          </div>\n\n          <div className=\"App__input-conteiner\">\n            <label htmlFor=\"animationDuration\">Animation Duration:</label>\n            <input\n              id=\"animationDuration\"\n              className=\"App__input\"\n              type=\"number\"\n              value={animationDuration}\n              min={0}\n              max={5000}\n              step={500}\n              onChange={\n                (event) => {\n                  this.setState({ animationDuration: +event.target.value });\n                }\n              }\n            />\n          </div>\n        </form>\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}